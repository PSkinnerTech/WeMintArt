import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import {
  Heading,
  Button,
  Image,
  FormControl,
  FormLabel,
  Input,
} from "@chakra-ui/react";
import { useEditionDrop, useClaimNFT } from "@thirdweb-dev/react";
import { useAccount } from "wagmi";
import React, { useState } from "react";
import { handleWhitelist, getWhitelistedAddresses } from "../utils/contract";
import Navbar from "./Components/Navbar";
import Footer from "./Components/Footer";
import HeroBanner from "./Components/HeroBanner";
import About from "./Components/About";

const Home: NextPage = () => {
  const { address } = useAccount();
  const editionDrop = useEditionDrop(
    "0xc321cB91524f3C7fcD9e9333D71b644957852Fd2"
  );
  const { mutate: claimNft, isLoading, error } = useClaimNFT(editionDrop);
  const [walletAddress, setWalletAddress] = useState("");
  const [whitelistState, setWhitelistState] = useState("idle"); // idle, joining, joined, error

  const handleWhitelistSubmit = async (event: React.FormEvent) => {
    event.preventDefault();
    setWhitelistState("joining");
    try {
      await handleWhitelist(event, walletAddress);
      setWhitelistState("joined");
    } catch (error) {
      setWhitelistState("error");
    }
  };

  const checkWhitelist = async () => {
    const whitelistedAddresses = await getWhitelistedAddresses();
    console.log("Whitelisted addresses: ", whitelistedAddresses);
  };

  let joinButtonLabel;
  switch (whitelistState) {
    case "joining":
      joinButtonLabel = "Joining...";
      break;
    case "joined":
      joinButtonLabel = "Joined";
      break;
    case "error":
      joinButtonLabel = "Error";
      break;
    default:
      joinButtonLabel = "Join Whitelist";
  }

  if (error) {
    console.error("failed to claim nft", error);
  }
  return (
    <div className={styles.container}>
      <Navbar />
      <Head>
        <title>WeMintArt</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/assets/favicon/wma-small.png" />
      </Head>
      <HeroBanner />
      <About />
      <main className={styles.main}>
        <Heading size="xl" textAlign="center" pb="3">
          Faces
        </Heading>
        {!address ? (
          <Image
            src="/assets/img/larrydiditt_faces.png"
            rounded="2xl"
            width="42%"
            maxW="300px"
            mt="5"
            mb="3"
            alt="probably nothing"
          />
        ) : null}
        <br />
        <ConnectButton />
        <form onSubmit={handleWhitelistSubmit}>
          <FormControl id="wallet-address">
            <FormLabel>Wallet Address</FormLabel>
            <Input
              type="text"
              value={walletAddress}
              onChange={(e) => setWalletAddress(e.target.value)}
            />
            <Button m="4" colorScheme="teal" type="submit">
              {joinButtonLabel}
            </Button>
            <Button m="4" colorScheme="blue" onClick={checkWhitelist}>
              Check Whitelist
            </Button>
          </FormControl>
        </form>
        {address ? (
          // Replace this part with the actual code
          <></>
        ) : null}
      </main>
      <Footer />
    </div>
  );
};

export default Home;
